
#log the sql in the log whenever a statement is executed
spring.jpa.show-sql=true
#use h2
spring.h2.console.enabled=true
#url used in the browser to access h2P
# spring.datasource.url=jdbc:h2:mem:shah
#url used in the browser to access mysql
spring.datasource.url=jdbc:mysql://localhost:3306/mockashop
spring.data.jpa.repositories.bootstrap-mode=default

spring.h2.console.settings.web-allow-others=true

spring.datasource.username=root
spring.datasource.password=root

spring.hateoas.use-hal-as-default-json-media-type=false
spring.data.rest.defaultMediaType=application/json
# update – the object model created based on the mappings (annotations or XML) is compared with the existing schema, and then Hibernate updates the schema according to the diff. It never deletes the existing tables or columns even if they are no more required by the application
# https://www.baeldung.com/spring-boot-data-sql-and-schema-sql#controlling-database-creation-using-hibernate
spring.jpa.hibernate.ddl-auto=none

# By default, Spring Boot automatically creates the schema of an embedded DataSource.
# Notably, if we are using a non-embedded database, let's say MySQL or PostGreSQL, and wish to initialize its schema, we'll have to set this property to always.
# always – always initialize the database
# https://www.baeldung.com/spring-boot-data-sql-and-schema-sql#customizing-database-schema-creation
spring.sql.init.mode=always